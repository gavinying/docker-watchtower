build:
  main: ./main.go
  binary: watchtower
  goos:
    - linux
    - windows
  goarch:
    - amd64
    - 386
    - arm
    - arm64
  ldflags:
    - -s -w -X github.com/helloysd/docker-watchtower/internal/meta.Version={{.Version}}
archives:
  - 
    name_template: "{{.ProjectName}}_{{.Os}}_{{.Arch}}"
    format: tar.gz
    replacements:
      arm: armhf
      arm64: arm64v8
      amd64: amd64
      386: 386
      darwin: macOS
      linux: linux
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE.md
dockers:
  -
    use_buildx: true
    build_flag_templates: [ "--platform=linux/amd64" ]
    goos: linux
    goarch: amd64
    goarm: ''
    dockerfile: dockerfiles/Dockerfile
    image_templates:
      - helloysd/docker-watchtower:amd64-{{ .Version }}
      - helloysd/docker-watchtower:amd64-latest
    binaries:
      - watchtower
  - 
    use_buildx: true
    build_flag_templates: [ "--platform=linux/386" ]
    goos: linux
    goarch: 386
    goarm: ''
    dockerfile: dockerfiles/Dockerfile
    image_templates:
      - helloysd/docker-watchtower:i386-{{ .Version }}
      - helloysd/docker-watchtower:i386-latest
    binaries:
      - watchtower
  - 
    use_buildx: true
    build_flag_templates: [ "--platform=linux/arm/v6" ]
    goos: linux
    goarch: arm
    goarm: 6
    dockerfile: dockerfiles/Dockerfile
    image_templates:
      - helloysd/docker-watchtower:armhf-{{ .Version }}
      - helloysd/docker-watchtower:armhf-latest
    binaries:
      - watchtower
  - 
    use_buildx: true
    build_flag_templates: [ "--platform=linux/arm64/v8" ]
    goos: linux
    goarch: arm64
    goarm: ''
    dockerfile: dockerfiles/Dockerfile
    image_templates:
      - helloysd/docker-watchtower:arm64v8-{{ .Version }}
      - helloysd/docker-watchtower:arm64v8-latest
    binaries:
      - watchtower
